spring.application.name=spring-boot-examples
server.port=8080
# SSL配置
#server.port=8443
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=secret
#server.ssl.key-password=another-secret
endpoints.shutdown.enabled=true
management.security.enabled=false
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
spring.messages.encoding=UTF-8
# 支持HTTP响应压缩
server.compression.enabled=true
# 默认情况下，响应的长度必须至少为2048字节才能执行压缩
#server.compression.min-response-size=
# 默认情况下，html、xml、plain、css、js才会被压缩
#server.compression.mime-types=
# Allow Thymeleaf templates to be reloaded at dev time
spring.thymeleaf.cache=false
server.tomcat.accesslog.enabled=true
server.tomcat.basedir=target/tomcat
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/quartz
spring.datasource.username=root
spring.datasource.password=
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=10
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
# Redis (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
#spring.redis.host=127.0.0.1
# Redis服务器连接端口
#spring.redis.port=7001
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=30000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接超时时间（毫秒）
spring.redis.timeout=30000
# name of Redis server  哨兵监听的Redis server的名称
spring.redis.sentinel.master=master1
# comma-separated list of host:port pairs  哨兵的配置列表
spring.redis.sentinel.nodes=127.0.0.1:26379
# 配置Redis Cluster节点
#spring.redis.cluster.nodes[0]=127.0.0.1:7001
#spring.redis.cluster.nodes[1]=127.0.0.1:7002
#spring.redis.cluster.nodes[2]=127.0.0.1:7003
#spring.redis.cluster.nodes[3]=127.0.0.1:8001
#spring.redis.cluster.nodes[4]=127.0.0.1:8002
#spring.redis.cluster.nodes[5]=127.0.0.1:8003
# 在执行配置Redis命令时遵循的重定向的最大数目
#spring.redis.cluster.max-redirects=3
# Mail
spring.mail.properties.mail.smtp.connectiontimeout = 5000
spring.mail.properties.mail.smtp.timeout = 3000
spring.mail.properties.mail.smtp.writetimeout = 5000
spring.mail.host=mail.techown.com
spring.mail.username=hefa@techown.com
spring.mail.password=
spring.mail.default-encoding=UTF-8
spring.mail.from.addr=hefa@techown.com
# ActiveMQ
spring.activemq.broker-url=tcp://127.0.0.1:61618
spring.activemq.user=admin
spring.activemq.password=
spring.activemq.pool.enabled=true
spring.activemq.pool.max-connections=50